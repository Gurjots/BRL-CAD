#!/bin/bash

echo Content-type: text/html
echo

# removing old files.
rm -f c.g
rm -f rt*
rm -f *.pix
rm -f ../cgi-images/*

iso=isoview

cat <<EOF | env /usr/brlcad/dev-7.25.0/bin//mged -c c.g
in leg1 rpp 0 8 0 100 0 8
in leg2 rpp 32 40 0 100 0 8
in leg3 rpp 0 8 0 40 40 48
in leg4 rpp 32 40 0 40 40 48
in leg5 rpp 0 8 40 48 0 48 
in leg6 rpp 32 40 40 48 0 48
in leg7 rpp 0 8 70 80 0 40
in leg8 rpp 32 40 70 80 0 40
in leg9 rpp 0 8 48 70 16 24 
in leg10 rpp 32 40 48 70 16 24
in cir1 rcc 4 100 0 0 0 8 4
in cir2 rcc 36 100 0 0 0 8 4
in cir3 rcc 0 75 40 4 0 0 5
in cir4 rcc 36 75 40 4 0 0 5
in sur1 rpp 8 32 40 44 0 40
in sur2 rpp 8 32 44 50 0 40
in sur3 rpp 8 32 48 100 0 4
in sur4 rpp 8 32 48 100 4 10
in par1 rpp 4 8 70 80 28 40
in par2 rpp 32 36 70 80 28 40
in par3 rcc 8 70 28 0 10 0 4
in par4 rcc 32 70 28 0 10 0 4
r reg u leg1 u leg2 u leg3 u leg4 u leg5 u leg6 u leg7 u leg8 u leg9 u leg10 u cir1 u cir2 u cir3 u cir4 u sur1 u sur3
r reg1 u reg - par1 - par2 - par3 - par4
r reg2 u sur2 u sur4 
mater reg1 plastic 164 96 38 0
mater reg2 plastic 250 80 50 0
B reg1 reg2
ae 30 60 -120
saveview $iso
EOF

sed '2cenv /usr/brlcad/dev-7.25.0//bin/rt -M \\' $iso > tempFile1

rm $iso

mv tempFile1 $iso

# give executable permissions to raytrace file.
chmod 777 $iso

# executing raytrace file. This will produce raw image in .pix format
# and a log
#file.
sh $iso

# converting .pix file to png image using BRLCAD commands.
env /usr/brlcad/dev-7.25.0//bin/pix-png  < $iso.pix > $iso.png

chmod 777 $iso.png

cp $iso.png ../cgi-images/

# open png image in a frame buffer. Currently not required.
#env /usr/brlcad/dev-7.25.0//bin/png-fb $rt.png


echo "<html><head></head><body><img src=\"../cgi-images/isoview.png\"></body></html>"
